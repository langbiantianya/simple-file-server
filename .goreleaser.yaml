# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 1
env:
  - GO111MODULE=on
  - GOPROXY=https://goproxy.cn
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - id: linux-amd64
    env:
      - CGO_ENABLED=1
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-gcc
    main: ./main.go
    goos:
      - linux
    goarch:
      - amd64
  - id: linux-arm64
    env:
      - CGO_ENABLED=1
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    main: ./main.go
    goos:
      - linux
    goarch:
      - arm64
  - id: linux-arm
    env:
      - CGO_ENABLED=1
      - CC=arm-linux-gnueabihf-gcc
      - CXX=arm-linux-gnueabihf-g++
    main: ./main.go
    goos:
      - linux
    goarch:
      - arm
    goarm:
      - "5"
      - "6"
      - "7"
  - id: linux-s390x
    env:
      - CGO_ENABLED=1
      - CC=s390x-linux-gnu-gcc
      - CXX=s390x-linux-gnu-g++
    main: ./main.go
    goos:
      - linux
    goarch:
      - s390x
  - id: linux-loong64
    env:
      - CGO_ENABLED=1
      - CC=loongarch64-linux-gnu-gcc
      - CXX=loongarch64-linux-gnu-g++
    main: ./main.go
    goos:
      - linux
    goarch:
      - loong64
  - id: darwin-amd64
    env:
      - CGO_ENABLED=1
      - CC=o64-clang
      - CXX=o64-clang++
    main: ./main.go
    goos:
      - darwin
    goarch:
      - amd64
  - id: darwin-arm64
    env:
      - CGO_ENABLED=1
      - CC=oa64-clang
      - CXX=oa64-clang++
    main: ./main.go
    goos:
      - darwin
    goarch:
      - arm64
  - id: windows-arm64
    env:
      - CGO_ENABLED=1
      - CC=/llvm-mingw/bin/aarch64-w64-mingw32-gcc
      - CXX=/llvm-mingw/bin/aarch64-w64-mingw32-g++
    main: ./main.go
    goos:
      - windows
    goarch:
      - arm64
  - id: windows-amd64
    env:
      - CGO_ENABLED=1
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    main: ./main.go
    goos:
      - windows
    goarch:
      - amd64
  # - id: linux-mips
  #   env:
  #     - CGO_ENABLED=1
  #     - CC=mips-linux-gcc
  #     - CXX=mips-linux-g++
  #   main: ./main.go
  #   goos:
  #     - linux
  #   goarch:
  #     - mips
  # - id: linux-mips64
  #   env:
  #     - CGO_ENABLED=1
  #     - CC=mips64-linux-gcc
  #     - CXX=mips64-linux-g++
  #   main: ./main.go
  #   goos:
  #     - linux
  #   goarch:
  #     - mips64

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
